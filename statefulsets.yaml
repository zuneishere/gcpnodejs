apiVersion: v1
kind: Service
metadata:
  name: amnodejs-svc
spec:
  type: NodePort
  selector:
    app: amnodejs
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4000
---
apiVersion: apps/v1
kind: StatefulSet

metadata:
  name: amnodejs
  
spec:
  selector:
    matchLabels:
      app: amnodejs
      environment: production
  replicas: 1
  serviceName: amnodejs-svc
  template:
    metadata:
      labels:
        app: amnodejs
        environment: production
    spec:
      containers:
      - name: amnodejs
        image: gcr.io/buoyant-genre-251705/amnodejs:1.0
        resources:
          limits:
            memory: "128Mi"
            cpu: "100m"
        env:
            - name: MONGO_HOSTNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-host
                  key: mongo_hostname
            - name: MONGO_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-user
                  key: mongo_username
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-pass
                  key: mongo_password
            - name: MONGO_PORT
              valueFrom:
                secretKeyRef:
                  name: mongo-prt
                  key: mongo_port

        ports:
        - containerPort: 4000
        # readinessProbe:
        #   httpGet:
        #     path: /test
        #     scheme: HTTP
        #     port: 4000
        #   initialDelaySeconds: 15
        #   periodSeconds: 10
        #   timeoutSeconds: 5
        #   successThreshold: 2
        #   failureThreshold: 5
        # livenessProbe:
        #   httpGet:
        #     path: /test
        #     port: 4000
        #     scheme: HTTP
        #   initialDelaySeconds: 30


